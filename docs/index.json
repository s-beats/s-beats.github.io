[{"categories":null,"contents":"ごっちゃにして解釈されがちだし、自分もしていたのでまとめる。\n   二要素認証とは  認証に二つの要素を使用する方式を指す。 このとき選択する要素は、知識、所有、生体の三つのうち二つである。\n   二段階認証  認証の成立に二つの段階を要する方式を指す。\n   違い  二要素認証 = 二段階認証 ではない！ パスワード認証成立→秘密の質問認証成立→認証成立といった場合は、二段階認証ではあるが知識要素しか用いていないため、二要素認証にはならない。 段階が一つでも、一度に二つの要素の認証を行う場合は、二要素認証となる。\n認証時の段階の数を示すのが○段階認証であり、 認証に用いる要素数を示すのが○要素認証となる。\n","date":"Jan 02","permalink":"https://s-beats.github.io/post/%E4%BA%8C%E8%A6%81%E7%B4%A0%E8%AA%8D%E8%A8%BC%E3%81%A8%E4%BA%8C%E6%AE%B5%E9%9A%8E%E8%AA%8D%E8%A8%BC/","tags":null,"title":"二要素認証と二段階認証"},{"categories":null,"contents":"業務でRDSを使うことになったので再復習がてら雑なメモを残す。\n   概要   マネージドRDBサービスである。 バックアップ、ハードのメンテナンス、障害時の復旧など面倒見てくれる。 エンジンは複数種類用意されている。     ストレージ   保存用ストレージにはEBSを使う。  汎用SSD、プロビジョンドIOPS SSD、マグネティックの三種から選択する。   高いIOPSが求められる際はプロビジョンドIOPS SSDを使う。 ストレージ拡張はダウンタイムなしで可能だが、拡張中は若干パフォーマンスが落ちる。     マルチAZ   二つのAZにDBインスタンスを配置可能である。 障害発生時やメンテナンスのダウンタイムを短縮して高い可用性を保てる。 片方のAZにはマスターDBインスタンス、もう片方にはスタンバイDBインスタンスが配置される。 マスターとスタンバイの同期レプリケーション(リアルタイムでの複製作成)により冗長化される。 マスターへの更新時に、同期レプリケーションが実行されて更新完了となる。 若干の遅延はあるが、数ms程度である。 フェイルオーバーが発生した際は、RDSのFQDNのDNSレコードがスタンバイ側IPに差し向けられる。  アプリケーション側でIPのキャッシュを持っている場合は、一時的に接続できなくなる。       リードレプリカ   参照専用のDBインスタンスである。 マスターのメンテナンス時も、参照は止めないという運用が可能となる。 マスターへの負荷を抑えられる。 マスターとのデータ同期は非同期レプリケーション方式で実行される。 書き込み時にパフォーマンスへの影響はないが、反映まで若干のタイムラグがある。     バックアップ   自動バックアップ可能である。  1日1回自動でDBスナップショットを取得する。 保持期間は最大35日である。 スナップショットを選択して新しいDB作成可能である。 稼働中のインスタンスにバックアップデータを置き換えることはできない。(新しく作るしかない)   手動スナップショットも可能である。  1リージョンあたり100個までという制限がある。 シングルAZの場合、短時間のI/O中断時間がある。(自動バックアップも) マルチAZの場合は、スタンバイからスナップショットを取るのでマスターへの影響はない。(I/Oのダウンタイムはない)       リストア   スナップショットを選んで新しいインスタンスを作成する。     ポイントタイムリカバリー   直近5分前から最大35日前までの任意のタイミングの状態のDBインスタンスを作成可能である。 最大日数は自動バックアップの期間に準ずる。  自動バックアップ有効の場合のみポイントタイムリカバリ可能である。       ネットワーク   VPC内に配置可能で、インターネット非公開にできる。 ほかのサービスからの通信はエンジンが提供するSSLを使った暗号化で守られる。     暗号化   暗号化有効にすることで、ストレージ 、スナップショット、ログなどを暗号化して保存できる。 途中から有効にすることはできない。 スナップショット暗号化コピーを作って、そのコピーからDBインスタンスを作成することで既存のデータを暗号化できる。     Aurora   AWS独自のエンジンで、ハイパフォーマンスである。 MySQL互換のエディション、PostgreSQL互換のエディションがある。     構成   インスタンスを作成すると、Auroraクラスタが作成される。 クラスタは、DBインスタンス、クラスタボリューム(ストレージ)で構成される。 ボリュームはSSDベースである。 クラスタボリュームは、単一リージョン内の3つのAZにあるそれぞれ2つのコピーで構成される。  自動で同期される。 自動で64TBまで拡張される。       レプリカ   マスタのマルチAZ構成はない。 クラスタ内のリードレプリカが、プライマリインスタンスに昇格することでフェイルオーバーを実現する。     エンドポイント   プライマリインスタンスへのエンドポイントはクラスタエンドポイントとなる。 リードレプリカへのエンドポイントは読み取りエンドポイントとなる。  複数のレプリカインスタンスがある場合は自動で負荷分散される。   インスタンスごとのエンドポイントはインスタンスエンドポイントとなる。 インスタンスエンドポイントをグルーピングして、カスタムエンドポイントを作成することも可能である。  ","date":"Dec 18","permalink":"https://s-beats.github.io/post/rds%E5%BE%A9%E7%BF%92%E3%83%A1%E3%83%A2/","tags":null,"title":"RDS復習メモ"},{"categories":null,"contents":"","date":"Jan 01","permalink":"https://s-beats.github.io/articles/","tags":null,"title":"Articles"}]